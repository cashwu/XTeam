@model XTeam.Models.Scripts

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        <div class="form-group">
            <label class="control-label col-md-2" for="Name">Script Name</label>
            <div class="col-md-10">
                <input id="Name" name="Name" type="text" class="form-control" v-model="name" >
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="sqlCommand">SQL Command</label>
            
            <div class="col-md-10">
                <textarea id="sqlCommand" class="form-control input-lg" rows="10"></textarea>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" id="btnSubmit" value="Create" class="btn btn-primary btn-lg" v-on:click="onSubmit" />
            </div>
        </div>
    </div>
}

<div>
    <a href="@Url.Action("Index", "Script")" class="btn btn-primary">Back to List</a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/codemirror")

    <script>

        var app = new Vue({
            el: '#app',
            mounted: function () {
                xteam.codeMirror.SetCodeMirrorById("sqlCommand");
            },
            data: {
                name: ""
            },
            methods: {
                onSubmit : function() {

                    var sqlCommand = xteam.codeMirror.GetCodeMirrorValue();

                    if ($.trim(this.name) === ""
                        || sqlCommand === "") {
                        alert("Input is not valid !!");
                        return;
                    }

                    var data = {
                        Name: this.name,
                        SqlCommand: sqlCommand,
                        __RequestVerificationToken : this.token
                    };

                    this.AjaxPost(data);
                },
                AjaxPost: function (data) {

                    var url = "@Url.Action("Create", "Script")";

                    xteam.http.AjaxPost(url, data, function(response) {
                        alert(response.Message);
                        app.Clear();
                    });
                },
                Clear: function () {
                    this.name = "";
                    xteam.codeMirror.ClearCodeMirror();
                }
            },
            computed: {
                token: function () {
                    return $("input[name='__RequestVerificationToken']").val();
                }
            }
        });

    </script>
}
