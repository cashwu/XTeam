@model XTeam.Models.Scripts

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var sqlCommand = Model == null ? string.Empty : Model.SqlCommand;
}

@section Style {
    @Styles.Render("~/Content/codemirror")
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-md-2" for="Name">Script Name</label>
            <div class="col-md-10">
                <input id="Name" name="Name" type="text" class="form-control">
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="sqlCommand">SQL Command</label>
            
            <div class="col-md-10">
                <textarea id="sqlCommand" class="form-control input-lg" rows="10">@(sqlCommand)</textarea>
                @Html.Hidden("sqlCommandText", sqlCommand)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" id="btnSubmit" value="Create" class="btn btn-primary btn-lg" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/codemirror")

    <script>
        
        var app = new Vue({
            el: '#app',
            mounted: function () {

                window.editor = window.editor || {};

                var sqlcmd = document.getElementById("sqlCommand");

                window.editor = CodeMirror.fromTextArea(sqlcmd,
                {
                    mode: "text/x-mssql",
                    indentWithTabs: true,
                    smartIndent: true,
                    lineNumbers: true,
                    lineWrapping: true,
                    matchBrackets: true,
                    autofocus: false,
                    readOnly: false,
                    firstLineNumber: 1,
                    extraKeys: { "Tab": "autocomplete" }, // To invoke the auto complete
                    hint: CodeMirror.hint.sql,
                    hintOptions: {
                        tables: {

                        }
                    }
                });

                window.editor.setOption("theme", "default");
                window.editor.refresh();
            },
            data: {
                dbSelect: "",
                tableSelect: "",
                tableData: [],
                tableDisable: true,
                columnData: [],
                columnSelect: [],
                result: {}
            }
        });

    </script>
}
