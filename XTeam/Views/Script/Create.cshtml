@model XTeam.Models.Scripts

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var sqlCommand = Model == null ? string.Empty : Model.SqlCommand;
}

@section Style {
    @Styles.Render("~/Content/codemirror")
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-md-2" for="sqlCommand">Script Name</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="sqlCommand">SQL Command</label>
            
            <div class="col-md-10">
                <textarea id="sqlCommand" class="form-control input-lg" rows="10">@(sqlCommand)</textarea>
                @Html.ValidationMessage("sqlCommandText", "", new { @class = "text-danger", @id = "sqlCmdError" })
                @Html.Hidden("sqlCommandText", sqlCommand)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/codemirror")

    <script>
        $(document).ready(function () {

        });
    </script>
}
