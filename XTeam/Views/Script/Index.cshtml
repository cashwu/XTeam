@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Manage Scripts</h2>

<div class="row">
    <div class="col-lg-9">
        <p>
            <a href="@Url.Action("Create", "Script")" class="btn btn-primary">Create New script</a>
        </p>
    </div>
    <div class="col-lg-3">
        <p>
            <input type="text" class="input-sm" name="filter" value="" placeholder="Filter" v-on:keyup="filter" v-model="Filter" />
        </p>
    </div>
</div>

<table class="table">
    <tr>
        <th>Name</th>
        @*<th>
            @Html.DisplayNameFor(model => model.SqlCommand)
        </th>*@
        <th>CreatedBy</th>
        <th>CreatedOn</th>
        <th>ModifiedBy</th>
        <th>ModifiedOn</th>
        <th></th>
    </tr>
    
    <tr v-for="item in data" >
        <td>
            {{item.Name}}
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.SqlCommand)
        </td>*@
        <td>
            {{item.CreatedBy}}
        </td>
        <td>
            {{item.CreatedOn}}
        </td>
        <td>
            {{item.CreatedOn}}
        </td>
        <td>
            {{item.CreatedOn}}
        </td>
        <td>
            <a v-bind:href="EditUrl(item.Id)" class="btn btn-info">Edit</a>
            <a v-bind:href="DetailsUrl(item.Id)" class="btn btn-primary">Details</a>
            <a v-bind:href="DeleteUrl(item.Id)" class="btn btn-danger">Delete</a>
        </td>
    </tr>
</table>

@section scripts
{
    <script>
        var app = new Vue({
            el: '#app',
            mounted: function() {
                this.LoadData();
            },
            data: {
                olddata: {},
                data: {},
                Filter: ""
            },
            methods: {
                LoadData: function() {
                    var url = "/api/ScriptApi/Getall";
                    xteam.http.AjaxGet(url,
                        function(data) {
                            console.log(data);
                            app.data = data;
                            app.olddata = data;
                        });
                },
                EditUrl: function(id) {
                    return "@Url.Action("Edit", "Script")" + "?id=" + id;
                },
                DetailsUrl: function(id) {
                    return "@Url.Action("Details", "Script")" + "?id=" + id;
                },
                DeleteUrl: function(id) {
                    return "@Url.Action("Delete", "Script")" + "?id=" + id;
                },
                filter: function() {
                    this.data = this.olddata;

                    this.data = this.data.filter((d) => {
                        return d.Name.toLocaleLowerCase().indexOf(app.Filter.toLocaleLowerCase()) > -1;
                    });
                }
            }
        });
    </script>
}
